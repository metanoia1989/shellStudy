#!/bin/bash

<<'EOF'
Shell支持多种扩展，如变量替换、命令扩展、算术扩展、通配符扩展等。

有时候脚本的循环语句需要执行成百上千次，如果每一个值都手动输入，谁也无法接受。      
Shell支持使用 seq 或 {} 动生成数字序列，并且使用 {} 还可以自动生成字母序列。        
for循环语句可以对 {} 或 seq 扩展后的数据列表进行循环。      
EOF

echo "{} 生成1~5的数字序列：" {1..5}
echo "{} 生成5~1的数字序列：" {5..1}
echo "{} 生成1~5步长为2的数字序列：" {1..10..2}
echo "{} 生成字母序列，小写字母表：" {a..z}
echo "{} 大写字母表：" {A..Z}
echo "{} 自动生成组合的字符串序列：" {x,y{i,j}{1,2,3},z}
i=5
echo '在{}中调用其他变量时，无法得到想要的数字序列，{1..$i}: ' {1..$i}

# 使用 seq 命令生成数字序列，可以调用其他变量，但该命令不支持生成字母序列。
# seq 默认输出序列的分隔符是 \n 换行符，也可以使用 -s 选项自定义分隔符。    
echo "seq 生成1~5的数字序列：" 
seq 1 5

echo "seq 使用空格为分隔符：" 
seq -s' ' 1 5

echo "seq 不指定起始位置时，则默认起始位置为1：" 
seq -s' ' 8

echo "seq 指定步长为2，输出奇数：" 
seq -s' ' 1 2 10

i=5
j=10
echo "seq 支持调用变量：" 
seq -s' ' $i $j